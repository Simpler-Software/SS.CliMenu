<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SS.CliMenu</name>
    </assembly>
    <members>
        <member name="T:SS.CliMenu.CliMenuOptions">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="T:SS.CliMenu.GetCliMenuOptionCmdLet">
            <summary>
            Returns a CliMenuOptions object with all menu options. This CmdLet has no parameters
            <para type="synopsis">Get a list menu options</para>
            <para type="description">Returns a CliMenuOptions object with all menu options. This CmdLet has no parameters</para>
            <example>
              <title>Default usage.</title>
              <description>Returns default menu-items for all menus.</description>
              <code>$opts = Get-CliMenuOption</code>
            </example>
            </summary>
        </member>
        <member name="T:SS.CliMenu.MenuObject">
            <summary>
            A menu object that stores a menu's configuration settings.
            <para type="description">A menu object that stores a menu's configuration settings.</para>
            </summary>
        </member>
        <member name="T:SS.CliMenu.NewCliMenuCmdLet">
            <summary>
            You can create as many menus you like, however you may only have one main Menu. The Menu must have a name, hence the Name parameter is Mandatory. The first Menu you create will become the main Menu even if you do not specify the IsMainMenu switch.
            <para type="synopsis">Create a new Menu</para>
            <para type="description">You can create as many menus you like, however you may only have one main Menu. The Menu must have a name, hence the Name parameter is Mandatory. The first Menu you create will become the main Menu even if you do not specify the IsMainMenu switch.</para>
            <example>
              <title>Default usage.</title>
              <description>This will create a new Menu with name MainMenu. If this is the first Menu, it will be created as a main Menu</description>
              <code>New-CliMenu -Name "MainMenu"</code>
            </example>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuCmdLet.Name">
            <summary>
            Normally you would like to specify a name without space and Camel-case the name.
            <para type="description">Normally you would like to specify a name without space and Camel-case the name.</para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuCmdLet.DisplayName">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuCmdLet.Description">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="T:SS.CliMenu.NewCliMenuItemCmdLet">
            <summary>
            Create a new Menu-Item for a Menu.
            <para type="synopsis">Create a new Menu-Item for a Menu.</para>
            <para type="description">Menu-Items are the action elements of the Menu. You add Menu-Items to a Menu.</para>
            <example>
              <title>Default usage.</title>
              <description>This will create a new Menu-Item for the menu named passed in. The Menu-object is piped into the New-CliMenuItem cmdlet.</description>
              <code>$menu | New-MenuItem -Name "UnlockUser" -DisplayName "Unlock a user" -Script { Unlock-UserObject } -DisableConfirm $true</code>
            </example>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.MenuObject">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.Name">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.DisplayName">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.Description">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.Script">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.ScriptArgs">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.Func">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.FuncArgs">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.VisibleScript">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.VisibleScriptArgs">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.DisableConfirm">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.ForegroundColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.OptionKey">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.IsSpace">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.NewCliMenuItemCmdLet.ConfirmTargetData">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="T:SS.CliMenu.SetCliMenuOptionCmdLet">
            <summary>
            
            <para type="synopsis"></para>
            <para type="description"></para>
            <example>
              <title>Default usage.</title>
              <description></description>
              <code>Set-CliMenuOption -Heading 'PowerShell Menu'</code>
            </example>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.MenuFillChar">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.MenuFillColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.Heading">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.HeadingColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.SubHeading">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.SubHeadingColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.FooterText">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.FooterTextColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.MenuItemColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.ViewOnlyColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.MenuNameColor">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.MaxWidth">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.SetCliMenuOptionCmdLet.HeaderScript">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="T:SS.CliMenu.ShowCliMenuCmdLet">
            <summary>
            Show the menu that is passed into the cmdlet.
            <para type="synopsis">Show a Menu.</para>
            <para type="description">Show the menu that is passed into the cmdlet.</para>
            <example>
              <title>Default usage.</title>
              <description></description>
              <code>$menu | Show-Menu</code>
            </example>
            </summary>
        </member>
        <member name="P:SS.CliMenu.ShowCliMenuCmdLet.InvokeItem">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.ShowCliMenuCmdLet.Menu">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.ShowCliMenuCmdLet.Header">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="T:SS.CliMenu.WriteCliMenuLineCmdLet">
            <summary>
            
            <para type="synopsis"></para>
            <para type="description"></para>
            <example>
              <title>Default usage.</title>
              <description></description>
              <code>Write-CliMenuLine "Menu line item"</code>
            </example>
            <example>
              <title>Default usage with script.</title>
              <description></description>
              <code>Write-CliMenuLine -Script { Write-Host "test" }</code>
            </example>
            </summary>
        </member>
        <member name="P:SS.CliMenu.WriteCliMenuLineCmdLet.Text">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.WriteCliMenuLineCmdLet.Script">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.WriteCliMenuLineCmdLet.Color">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
        <member name="P:SS.CliMenu.WriteCliMenuLineCmdLet.IsMenuItem">
            <summary>
            
            <para type="description"></para>
            </summary>
        </member>
    </members>
</doc>
